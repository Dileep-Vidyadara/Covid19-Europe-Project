{
	"name": "dataflow_cases_death_data",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_ingested_casesDeaths_data",
						"type": "DatasetReference"
					},
					"name": "srcCasesDeathADLS"
				},
				{
					"dataset": {
						"referenceName": "ds_country_lookup",
						"type": "DatasetReference"
					},
					"name": "srcLookupCountry"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_transformed_casesDeath_data",
						"type": "DatasetReference"
					},
					"name": "sinkCasesDeath"
				}
			],
			"transformations": [
				{
					"name": "filterEuropeOnly"
				},
				{
					"name": "selectOnlyReqFields"
				},
				{
					"name": "pivotIndicatorColumn"
				},
				{
					"name": "lookupCountryCode"
				},
				{
					"name": "SelectForSink",
					"description": "Autogenerated by data preview actions"
				}
			],
			"scriptLines": [
				"source(output(",
				"          country as string,",
				"          country_code as string,",
				"          continent as string,",
				"          population as integer,",
				"          indicator as string,",
				"          daily_count as short,",
				"          date as date,",
				"          rate_14_day as double,",
				"          source as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> srcCasesDeathADLS",
				"source(output(",
				"          country as string,",
				"          country_code_2_digit as string,",
				"          country_code_3_digit as string,",
				"          continent as string,",
				"          population as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> srcLookupCountry",
				"srcCasesDeathADLS filter(equals(continent, \"Europe\") && not(isNull(country_code))) ~> filterEuropeOnly",
				"filterEuropeOnly select(mapColumn(",
				"          country,",
				"          country_code,",
				"          population,",
				"          indicator,",
				"          daily_count,",
				"          date,",
				"          source",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectOnlyReqFields",
				"selectOnlyReqFields pivot(groupBy(country,",
				"          country_code,",
				"          population,",
				"          date,",
				"          source),",
				"     pivotBy(indicator, ['confirmed cases', 'deaths']),",
				"     count = sum(daily_count),",
				"     columnNaming: '$V_$N',",
				"     lateral: true) ~> pivotIndicatorColumn",
				"pivotIndicatorColumn, srcLookupCountry lookup(pivotIndicatorColumn@country == srcLookupCountry@country,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookupCountryCode",
				"lookupCountryCode select(mapColumn(",
				"          country = pivotIndicatorColumn@country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population = pivotIndicatorColumn@population,",
				"          confirmed_cases_count = {confirmed cases_count},",
				"          deaths_count,",
				"          date,",
				"          source",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectForSink",
				"SelectForSink sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sinkCasesDeath"
			]
		}
	}
}